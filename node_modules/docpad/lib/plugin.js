// Generated by CoffeeScript 1.3.3
(function() {
  var BasePlugin, _,
    __slice = [].slice;

  _ = require('underscore');

  BasePlugin = (function() {

    BasePlugin.prototype.docpad = null;

    BasePlugin.prototype.logger = null;

    BasePlugin.prototype.name = null;

    BasePlugin.prototype.config = {};

    BasePlugin.prototype.priority = 500;

    BasePlugin.prototype.events = ['generateBefore', 'generateAfter', 'cleanBefore', 'cleanAfter', 'parseBefore', 'parseAfter', 'renderBefore', 'render', 'renderDocument', 'renderAfter', 'writeBefore', 'writeAfter', 'serverBefore', 'serverAfter'];

    function BasePlugin(config) {
      var me;
      if (config == null) {
        config = {};
      }
      me = this;
      this.events = _.extend([], this.events);
      this.config = _.extend({}, this.config, config);
      this.docpad = this.config.docpad;
      this.logger = this.docpad.logger;
      if (this.config.name) {
        this.name || (this.name = this.config.name);
      }
      if (!this.name) {
        throw new Error('Plugin must have a name');
      }
      _.each(this.events, function(eventName) {
        if (typeof me[eventName] === 'function') {
          return me.docpad.on(eventName, function() {
            var args;
            args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
            return me[eventName].apply(me, args);
          });
        }
      });
    }

    return BasePlugin;

  })();

  module.exports = BasePlugin;

}).call(this);
